[
  {
    "op": "core/column-removal",
    "columnName": "Lõpp",
    "description": "Remove column Lõpp"
  },
  {
    "op": "core/column-removal",
    "columnName": "Column",
    "description": "Remove column Column"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Algus",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Algus by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Algus 1",
    "expression": "grel:join([split(value, '.')[2], split(value, '.')[1], split(value, '.')[0]], '-')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Algus 1 using expression grel:join([split(value, '.')[2], split(value, '.')[1], split(value, '.')[0]], '-')"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Algus 1",
    "expression": "join ([coalesce(cells['Algus 1'].value,''),coalesce(cells['Algus 2'].value,'')],' ')",
    "onError": "keep-original",
    "newColumnName": "DateTime",
    "columnInsertIndex": 1,
    "description": "Create column DateTime at index 1 based on column Algus 1 using expression join ([coalesce(cells['Algus 1'].value,''),coalesce(cells['Algus 2'].value,'')],' ')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "DateTime",
      "Kogus (kWh)",
      "Börsihind (EUR / MWh)"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DateTime",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DateTime using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Kogus (kWh)",
    "expression": "grel:value.replace(',', '.').toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Kogus (kWh) using expression grel:value.replace(',', '.').toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Börsihind (EUR / MWh)",
    "expression": "grel:value.replace(',', '.').toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Börsihind (EUR / MWh) using expression grel:value.replace(',', '.').toNumber()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Börsihind (EUR / MWh)",
    "newColumnName": "Price",
    "description": "Rename column Börsihind (EUR / MWh) to Price"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Kogus (kWh)",
    "newColumnName": "Elec",
    "description": "Rename column Kogus (kWh) to Elec"
  }
]